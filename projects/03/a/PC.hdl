// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    //This one was annoying. But, the trick is you always increment the feedback, then decide if you want to select that incremented feedback or just go with the "in" wire.
    Inc16(in=feedback, out=inced);
    Mux16(a=feedback,b=inced,sel=inc,out=v1);

    Mux16(a=v1,b=in,sel=load,out=v2);
    Mux16(a=v2,b=false,sel=reset,out=v3);

    //Since you're taking care of the logic behind manipulating the counter above, you can always load that logic's output into the register (ie. the load=true part).
   //Make sure to have to output wires, 1 for the feedback, and 1 for the actual "out" wire
    Register(in=v3,load=true,out=out,out=feedback);
}
